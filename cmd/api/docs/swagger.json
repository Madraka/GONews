{
    "swagger": "2.0",
    "info": {
        "description": "This is a comprehensive CRUD API for a news blog platform with advanced authentication and real-time features - UPDATED!",
        "title": "News Blog API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/2fa/disable": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Disable 2FA by verifying the TOTP code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Two-Factor Authentication"
                ],
                "summary": "Disable Two-Factor Authentication",
                "parameters": [
                    {
                        "description": "TOTP or backup code verification",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.Verify2FARequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/2fa/enable": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Enable 2FA by verifying the TOTP code from authenticator app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Two-Factor Authentication"
                ],
                "summary": "Enable Two-Factor Authentication",
                "parameters": [
                    {
                        "description": "TOTP verification",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.Setup2FARequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/2fa/setup": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Generate TOTP secret and QR code for 2FA setup",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Two-Factor Authentication"
                ],
                "summary": "Setup Two-Factor Authentication",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Setup2FAResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/2fa/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the current 2FA status for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Two-Factor Authentication"
                ],
                "summary": "Get Two-Factor Authentication Status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/2fa/verify": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Verify TOTP code or backup code for 2FA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Two-Factor Authentication"
                ],
                "summary": "Verify Two-Factor Authentication",
                "parameters": [
                    {
                        "description": "TOTP or backup code verification",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.Verify2FARequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/analytics/comparison": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get comparative analytics between articles and videos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Unified Analytics"
                ],
                "summary": "Compare articles vs videos performance",
                "parameters": [
                    {
                        "type": "string",
                        "default": "month",
                        "description": "Timeframe: day, week, month, all",
                        "name": "timeframe",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/analytics/dashboard": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get comprehensive analytics across articles and videos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Unified Analytics"
                ],
                "summary": "Get unified analytics dashboard",
                "parameters": [
                    {
                        "type": "string",
                        "default": "week",
                        "description": "Timeframe: day, week, month, all",
                        "name": "timeframe",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/analytics/user-engagement": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed user engagement metrics across content types",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Unified Analytics"
                ],
                "summary": "Get user engagement report",
                "parameters": [
                    {
                        "type": "string",
                        "default": "month",
                        "description": "Timeframe: day, week, month, all",
                        "name": "timeframe",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by specific user ID",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/articles": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new article to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Create a new article",
                "parameters": [
                    {
                        "description": "Article data",
                        "name": "article",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Article"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Article"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/articles/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing article in the database (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Update an article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Article data",
                        "name": "article",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Article"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Article"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an article by ID (admin only)",
                "tags": [
                    "Articles"
                ],
                "summary": "Delete an article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/breaking-news": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new breaking news banner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Breaking News"
                ],
                "summary": "Create breaking news banner",
                "parameters": [
                    {
                        "description": "Breaking news banner info",
                        "name": "breakingNews",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BreakingNewsBanner"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.BreakingNewsBanner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/breaking-news/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing breaking news banner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Breaking News"
                ],
                "summary": "Update breaking news banner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Breaking news banner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Breaking news banner updated info",
                        "name": "breakingNews",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BreakingNewsBanner"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BreakingNewsBanner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a breaking news banner",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Breaking News"
                ],
                "summary": "Delete breaking news banner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Breaking news banner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/cache/clear": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Clear all cache layers (L1 Ristretto + L2 Redis)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Clear cache",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/cache/warm": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Preload cache with popular articles, categories, and tags",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Warm cache",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/categories": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new article category with cache invalidation (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "parameters": [
                    {
                        "description": "Category data",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/categories/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing category with cache invalidation (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category data",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete a category with cache invalidation (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/live-news": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new live news stream",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Live News"
                ],
                "summary": "Create live news stream",
                "parameters": [
                    {
                        "description": "Live news stream info",
                        "name": "stream",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LiveNewsStream"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.LiveNewsStream"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/live-news/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing live news stream",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Live News"
                ],
                "summary": "Update live news stream",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Stream ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated stream info",
                        "name": "stream",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LiveNewsStream"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LiveNewsStream"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a live news stream",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Live News"
                ],
                "summary": "Delete live news stream",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Stream ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/live-news/{id}/updates": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adds a new update to an existing live news stream",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Live News"
                ],
                "summary": "Add update to live news stream",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Stream ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Live news update info",
                        "name": "update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LiveNewsUpdate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.LiveNewsUpdate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/media/stats": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get statistics about uploaded media (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Get media statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/menu-items": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new menu item (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MenuItem"
                ],
                "summary": "Create a new menu item",
                "parameters": [
                    {
                        "description": "Menu item data",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MenuItem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.MenuItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/menu-items/reorder": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update sort order for multiple menu items (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MenuItem"
                ],
                "summary": "Reorder menu items",
                "parameters": [
                    {
                        "description": "Array of items with id and sort_order",
                        "name": "items",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/menu-items/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing menu item (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MenuItem"
                ],
                "summary": "Update a menu item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Menu Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Menu item data",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MenuItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MenuItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete a menu item and all its children (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MenuItem"
                ],
                "summary": "Delete a menu item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Menu Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/menus": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new navigation menu (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
                "summary": "Create a new menu",
                "parameters": [
                    {
                        "description": "Menu data",
                        "name": "menu",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Menu"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Menu"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/menus/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing menu (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
                "summary": "Update a menu",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Menu ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Menu data",
                        "name": "menu",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Menu"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Menu"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete a menu and all its items (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
                "summary": "Delete a menu",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Menu ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/news-stories": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new news story",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News Stories"
                ],
                "summary": "Create news story",
                "parameters": [
                    {
                        "description": "News story info",
                        "name": "story",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NewsStory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.NewsStory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/news-stories/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing news story",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News Stories"
                ],
                "summary": "Update news story",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Story ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated story info",
                        "name": "story",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NewsStory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.NewsStory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a news story",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News Stories"
                ],
                "summary": "Delete news story",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Story ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/newsletters": {
            "get": {
                "description": "Retrieve all newsletters with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Newsletter"
                ],
                "summary": "Get all newsletters",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status (draft, scheduled, sent)",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new newsletter campaign (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Newsletter"
                ],
                "summary": "Create a new newsletter",
                "parameters": [
                    {
                        "description": "Newsletter data",
                        "name": "newsletter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Newsletter"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Newsletter"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/newsletters/{id}": {
            "get": {
                "description": "Retrieve a single newsletter by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Newsletter"
                ],
                "summary": "Get newsletter by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Newsletter ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Newsletter"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing newsletter (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Newsletter"
                ],
                "summary": "Update a newsletter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Newsletter ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Newsletter data",
                        "name": "newsletter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Newsletter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Newsletter"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete a newsletter (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Newsletter"
                ],
                "summary": "Delete a newsletter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Newsletter ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/newsletters/{id}/send": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Send a newsletter immediately (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Newsletter"
                ],
                "summary": "Send a newsletter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Newsletter ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Newsletter"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/page-blocks/validate": {
            "post": {
                "description": "Validate content block data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Page Content Blocks"
                ],
                "summary": "Validate a page content block",
                "parameters": [
                    {
                        "description": "Content block data",
                        "name": "block",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.CreatePageBlockRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/page-blocks/{id}": {
            "get": {
                "description": "Retrieve a content block by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Page Content Blocks"
                ],
                "summary": "Get a page content block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Block ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PageContentBlock"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing content block",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Page Content Blocks"
                ],
                "summary": "Update a page content block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Block ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Content block data",
                        "name": "block",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.UpdatePageBlockRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PageContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a content block by ID",
                "tags": [
                    "Page Content Blocks"
                ],
                "summary": "Delete a page content block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Block ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/page-blocks/{id}/duplicate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a copy of an existing content block",
                "tags": [
                    "Page Content Blocks"
                ],
                "summary": "Duplicate a page content block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Block ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Duplication options",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/services.DuplicateBlockRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.PageContentBlock"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/pages": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new page with content blocks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pages"
                ],
                "summary": "Create a new page",
                "parameters": [
                    {
                        "description": "Page data",
                        "name": "page",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.CreatePageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Page"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/pages/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pages"
                ],
                "summary": "Update a page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Page data",
                        "name": "page",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.UpdatePageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Page"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a page by ID",
                "tags": [
                    "Pages"
                ],
                "summary": "Delete a page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/pages/{id}/blocks": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new content block for a page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Page Content Blocks"
                ],
                "summary": "Create a page content block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Content block data",
                        "name": "block",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.CreatePageBlockRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.PageContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/pages/{id}/duplicate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a copy of an existing page",
                "tags": [
                    "Pages"
                ],
                "summary": "Duplicate a page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title for the duplicated page",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Page"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/pages/{id}/publish": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change page status to published",
                "tags": [
                    "Pages"
                ],
                "summary": "Publish a page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Page"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/pages/{id}/unpublish": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change page status to draft",
                "tags": [
                    "Pages"
                ],
                "summary": "Unpublish a page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Page"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/queue/enqueue": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Manually enqueue a job to a specific queue for testing or administrative purposes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queue"
                ],
                "summary": "Enqueue a job",
                "parameters": [
                    {
                        "description": "Job details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.EnqueueJobRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/queue/health": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get health and operational status of all Redis queues",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queue"
                ],
                "summary": "Get queue health status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.QueueHealthResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/queue/jobs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get jobs from a specific queue with pagination and filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queue"
                ],
                "summary": "Get queue jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Queue name (translations, video_processing, agent_tasks, general)",
                        "name": "queue",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter by status (pending, processing, completed, failed, retrying)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.QueueJobsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/queue/jobs/cleanup": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove completed jobs older than specified hours (default 24h)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queue"
                ],
                "summary": "Cleanup completed jobs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 24,
                        "description": "Hours old to cleanup",
                        "name": "hours",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Specific queue to cleanup (optional)",
                        "name": "queue",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/queue/jobs/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific job by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queue"
                ],
                "summary": "Get queue job details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/queue.JobStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a job from the queue (only completed, failed, or dead jobs)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queue"
                ],
                "summary": "Delete a queue job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/queue/jobs/{id}/retry": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retry a failed job by moving it back to pending status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queue"
                ],
                "summary": "Retry a failed job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/queue/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get real-time statistics for all Redis queues including pending, processing, completed, and failed job counts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queue"
                ],
                "summary": "Get queue statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.QueueStatsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/settings": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new system setting (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Create a new setting",
                "parameters": [
                    {
                        "description": "Setting data",
                        "name": "setting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Setting"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Setting"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/settings/bulk": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update multiple settings at once (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Bulk update settings",
                "parameters": [
                    {
                        "description": "Map of setting keys to values",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/settings/key/{key}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a setting value by its key (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Update setting by key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Setting key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Setting value",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Setting"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/settings/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing setting (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Update a setting",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Setting ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Setting data",
                        "name": "setting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Setting"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Setting"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete a setting (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Delete a setting",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Setting ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/tags": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new article tag with cache invalidation (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Create a new tag",
                "parameters": [
                    {
                        "description": "Tag data",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Tag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Tag"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/tags/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing tag with cache invalidation (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Update a tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tag data",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Tag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Tag"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete a tag with cache invalidation (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Delete a tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/translations/bulk": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Queue bulk translation jobs for specified content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Translation"
                ],
                "summary": "Bulk translate content",
                "parameters": [
                    {
                        "description": "Bulk translation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BulkTranslationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BulkTranslationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/translations/process": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Manually trigger processing of pending translation jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Translation"
                ],
                "summary": "Process translation queue",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/translations/progress": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get translation progress for all content types and languages",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Translation"
                ],
                "summary": "Get translation progress",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TranslationProgress"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/translations/queue": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get pending and processing translation jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Translation"
                ],
                "summary": "Get translation queue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by status (pending, processing, completed, failed)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by entity type",
                        "name": "entity_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Limit results",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TranslationQueue"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/translations/test": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Test endpoint for checking translation system functionality",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Translation"
                ],
                "summary": "Test translation system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/translations/{entity_type}/{entity_id}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Translate a single entity to specified languages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Translation"
                ],
                "summary": "Translate single entity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity type (article, category, tag, menu, notification)",
                        "name": "entity_type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Entity ID",
                        "name": "entity_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Target languages",
                        "name": "languages",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/video-analytics/all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get comprehensive analytics across all videos in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Video Analytics"
                ],
                "summary": "Get analytics for all videos (admin)",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "views",
                        "description": "Sort by: views, engagement, created_at",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "desc",
                        "description": "Order: asc, desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/video-analytics/engagement": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get engagement metrics for video content (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Video Analytics"
                ],
                "summary": "Get video engagement statistics",
                "parameters": [
                    {
                        "type": "string",
                        "default": "week",
                        "description": "Timeframe: day, week, month",
                        "name": "timeframe",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by specific video ID",
                        "name": "video_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/agent/tasks": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve user's agent tasks with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent"
                ],
                "summary": "Get Agent Tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by task type",
                        "name": "task_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new automated task for n8n integration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent"
                ],
                "summary": "Create Agent Task",
                "parameters": [
                    {
                        "description": "Agent task creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateAgentTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.AgentTaskResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/agent/tasks/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a specific agent task by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent"
                ],
                "summary": "Get Agent Task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AgentTaskResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the status and result of an agent task (for n8n webhook)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent"
                ],
                "summary": "Update Agent Task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAgentTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AgentTaskResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an agent task",
                "tags": [
                    "Agent"
                ],
                "summary": "Delete Agent Task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/agent/tasks/{id}/process": {
            "post": {
                "description": "Process an agent task using AI services (for internal use)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent"
                ],
                "summary": "Process Agent Task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ProcessAgentTaskResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ai/categorize": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Automatically categorize and tag content using AI",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Categorize Content with AI",
                "parameters": [
                    {
                        "description": "Content categorization request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CategorizeContentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CategorizeContentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ai/content": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Generate article content based on topic and parameters using AI",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Generate AI Content",
                "parameters": [
                    {
                        "description": "Content generation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenerateContentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenerateContentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ai/headlines": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Generate multiple headline suggestions for given content using AI",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Generate AI Headlines",
                "parameters": [
                    {
                        "description": "Headlines generation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenerateHeadlinesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenerateHeadlinesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ai/improve": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get AI suggestions to improve existing content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Improve Content with AI",
                "parameters": [
                    {
                        "description": "Content improvement request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ImproveContentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ImproveContentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ai/moderate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Use AI to moderate content for inappropriate material",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Moderate Content with AI",
                "parameters": [
                    {
                        "description": "Content moderation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ModerateContentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ModerateContentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ai/suggestions": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve user's AI content suggestions history",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Get AI Suggestions History",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Suggestion type filter",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ai/summarize": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Generate a summary of given content using AI",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Summarize Content with AI",
                "parameters": [
                    {
                        "description": "Content summarization request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SummarizeContentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SummarizeContentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ai/usage-stats": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve user's AI service usage statistics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Get AI Usage Statistics",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 30,
                        "description": "Number of days to include",
                        "name": "days",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles": {
            "get": {
                "description": "Retrieve a list of articles with pagination using cached JSON",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get articles with pagination (Cache Optimized)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 10, max: 50)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by category",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/blocks": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new article using modern content blocks system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Create a new article with content blocks",
                "parameters": [
                    {
                        "description": "Article with content blocks data",
                        "name": "article",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateArticleWithBlocksRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Article"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/recommendations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of recommended articles for the authenticated user or based on general popularity if not authenticated.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get recommended articles",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of recommendations to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Article"
                            }
                        }
                    },
                    "401": {
                        "description": "If authentication is required and fails",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "If an internal error occurs",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/secure": {
            "get": {
                "description": "Retrieve a list of articles with pagination. Redaction applied when NEWS_REDACTION_ENABLED=true",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get articles with pagination and optional redaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 10, max: 50)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Force redaction of sensitive data",
                        "name": "redact",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/trending": {
            "get": {
                "description": "Retrieve a list of trending articles based on recent interactions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get trending articles",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of trending articles to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Article"
                            }
                        }
                    },
                    "500": {
                        "description": "If an internal error occurs",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{article_id}/blocks/breaking-news": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a breaking news alert banner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Blocks"
                ],
                "summary": "Create a breaking news banner block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Breaking news settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateBreakingNewsRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{article_id}/blocks/chart": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create an interactive chart block with data visualization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Blocks"
                ],
                "summary": "Create a chart block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Chart data and settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateChartRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{article_id}/blocks/countdown": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a countdown timer block for events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Blocks"
                ],
                "summary": "Create a countdown timer block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Countdown settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCountdownRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{article_id}/blocks/embed": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Automatically create an embed block from a detected URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Blocks"
                ],
                "summary": "Create embed block from URL",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "URL and embed settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateEmbedRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{article_id}/blocks/faq": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a frequently asked questions block",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Blocks"
                ],
                "summary": "Create an FAQ block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "FAQ items and settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateFAQRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{article_id}/blocks/map": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create an interactive map block with markers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Blocks"
                ],
                "summary": "Create a map block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Map coordinates and settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateMapRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{article_id}/blocks/news-ticker": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a scrolling news ticker block",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Blocks"
                ],
                "summary": "Create a news ticker block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "News ticker settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateNewsTickerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{article_id}/blocks/newsletter": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a newsletter subscription block",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Blocks"
                ],
                "summary": "Create a newsletter signup block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Newsletter settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateNewsletterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{article_id}/blocks/quiz": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create an interactive quiz or poll block",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Blocks"
                ],
                "summary": "Create a quiz/poll block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Quiz data and settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateQuizRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{article_id}/similar": {
            "get": {
                "description": "Retrieve a list of articles similar to a given article.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get similar articles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the article to find similar articles for",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 5,
                        "description": "Number of similar articles to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Article"
                            }
                        }
                    },
                    "400": {
                        "description": "If article_id is invalid",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "If the source article is not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "If an internal error occurs",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{id}": {
            "get": {
                "description": "Retrieve a single article by its ID using cached JSON",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get a single article by ID (Cache Optimized)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Article"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{id}/analytics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get analytics data for a specific article",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get article analytics",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{id}/blocks": {
            "get": {
                "description": "Retrieve all content blocks for a specific article",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Blocks"
                ],
                "summary": "Get content blocks for an article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter by block type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by visibility (default: true)",
                        "name": "visible",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ArticleContentBlock"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Replace all content blocks for an article",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Blocks"
                ],
                "summary": "Update all content blocks for an article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Content blocks data",
                        "name": "blocks",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateArticleBlocksRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add a new content block to an article",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Blocks"
                ],
                "summary": "Create a new content block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Content block data",
                        "name": "block",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{id}/blocks/card-grid": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a grid layout with cards",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advanced Content Blocks"
                ],
                "summary": "Create a card grid block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Card grid settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCardGridRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{id}/blocks/comments": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a comments section block",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advanced Content Blocks"
                ],
                "summary": "Create a comments block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comments block settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCommentsRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{id}/blocks/hero": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a hero banner with background and CTA buttons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advanced Content Blocks"
                ],
                "summary": "Create a hero section block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Hero section settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateHeroRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{id}/blocks/product": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a product display block for e-commerce",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advanced Content Blocks"
                ],
                "summary": "Create a product showcase block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product block settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{id}/blocks/rating": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a rating and review block",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advanced Content Blocks"
                ],
                "summary": "Create a rating/review block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Rating block settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateRatingRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{id}/blocks/reorder": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update the position of multiple content blocks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Blocks"
                ],
                "summary": "Reorder content blocks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Block positions",
                        "name": "blocks",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ReorderBlocksRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{id}/blocks/search": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a search interface block",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advanced Content Blocks"
                ],
                "summary": "Create a search block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Search block settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{id}/blocks/social-feed": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a live social media feed block",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advanced Content Blocks"
                ],
                "summary": "Create a social media feed block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Social feed settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateSocialFeedRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{id}/interactions": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Record a user's interaction with an article (view, bookmark, vote, etc.)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Record user interaction with article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Interaction data",
                        "name": "interaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RecordInteractionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.UserArticleInteraction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{id}/migrate-to-blocks": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Convert a legacy article to use content blocks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Blocks"
                ],
                "summary": "Migrate article to blocks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Article"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{id}/secure": {
            "get": {
                "description": "Retrieve a single article by its ID. Redaction applied when NEWS_REDACTION_ENABLED=true",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get a single article by ID with optional redaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Force redaction of sensitive data",
                        "name": "redact",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Article"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{id}/with-blocks": {
            "get": {
                "description": "Retrieve an article with its content blocks for editing",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get article with content blocks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Article"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "description": "Login with username and password to receive JWT tokens with enhanced security",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login with enhanced security",
                "parameters": [
                    {
                        "description": "Login Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserLoginDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.TokenPair"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Securely logout and invalidate tokens",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout with enhanced security",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/notifications": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve notifications for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user notifications",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Fetch only unread notifications",
                        "name": "unread_only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedNotificationsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/notifications/read-all": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark all unread notifications as read for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Mark all notifications as read",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.MarkAllNotificationsReadResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/notifications/{notification_id}/read": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark a specific notification as read for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Mark notification as read",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification ID",
                        "name": "notification_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Notification"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/profile": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the authenticated user's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "description": "Profile data to update",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateUserProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/refresh": {
            "post": {
                "description": "Use refresh token to get a new access token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh authentication token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.TokenPair"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "description": "Register a new user with comprehensive security validation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user with enhanced security",
                "parameters": [
                    {
                        "description": "User Registration Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserRegistrationDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/blocks/{block_id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing content block",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Blocks"
                ],
                "summary": "Update a content block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Content Block ID",
                        "name": "block_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Content block update data",
                        "name": "block",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateContentBlockRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an existing content block",
                "tags": [
                    "Content Blocks"
                ],
                "summary": "Delete a content block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Content Block ID",
                        "name": "block_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/breaking-news": {
            "get": {
                "description": "Retrieves all currently active breaking news banners",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Breaking News"
                ],
                "summary": "Get active breaking news banners",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.BreakingNewsBanner"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/cache/analytics": {
            "get": {
                "description": "Retrieve advanced cache performance analytics and optimization recommendations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Monitoring"
                ],
                "summary": "Get cache analytics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/cache/health": {
            "get": {
                "description": "Check the health status of all cache layers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Monitoring"
                ],
                "summary": "Get cache health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/cache/preload": {
            "post": {
                "description": "Preload cache with popular content for better performance",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Monitoring"
                ],
                "summary": "Preload cache",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/cache/stats": {
            "get": {
                "description": "Retrieve detailed cache statistics for monitoring and debugging",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Monitoring"
                ],
                "summary": "Get cache statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/cache/warm": {
            "post": {
                "description": "Warm cache with popular content (public endpoint for development)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cache"
                ],
                "summary": "Public cache warm",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/content-blocks/analyze-url": {
            "post": {
                "description": "Check if a URL can be embedded and return embed information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Blocks"
                ],
                "summary": "Analyze URL for embed compatibility",
                "parameters": [
                    {
                        "description": "URL to analyze",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AnalyzeURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AnalyzeURLResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/content-blocks/detect-embeds": {
            "post": {
                "description": "Analyze content and suggest automatic embed blocks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Content Blocks"
                ],
                "summary": "Detect embeddable URLs in content",
                "parameters": [
                    {
                        "description": "Content to analyze",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DetectEmbedsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DetectEmbedsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/live-news": {
            "get": {
                "description": "Retrieves all currently active live news streams",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Live News"
                ],
                "summary": "Get active live news streams",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.LiveNewsStream"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/live-news/{id}": {
            "get": {
                "description": "Retrieves a specific live news stream by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Live News"
                ],
                "summary": "Get live stream by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Stream ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LiveNewsStream"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/live-news/{id}/updates": {
            "get": {
                "description": "Gets all updates for a specific live news stream with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Live News"
                ],
                "summary": "Get updates for a live news stream",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Stream ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default: 20)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/news-stories": {
            "get": {
                "description": "Retrieves all currently active news stories for display",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News Stories"
                ],
                "summary": "Get active news stories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.NewsStory"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/news-stories/unviewed": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves news stories that the authenticated user hasn't seen yet",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News Stories"
                ],
                "summary": "Get user stories that haven't been viewed",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.NewsStory"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/news-stories/{id}": {
            "get": {
                "description": "Retrieves a specific news story by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News Stories"
                ],
                "summary": "Get story by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Story ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.NewsStory"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/pages": {
            "get": {
                "description": "Retrieve a list of pages with pagination and filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pages"
                ],
                "summary": "Get all pages",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by template",
                        "name": "template",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by language",
                        "name": "language",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by parent ID",
                        "name": "parent_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search in title and content",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.PaginatedPagesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/pages/hierarchy": {
            "get": {
                "description": "Retrieve page hierarchy (parent-child relationships)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pages"
                ],
                "summary": "Get page hierarchy",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Page"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/pages/slug/{slug}": {
            "get": {
                "description": "Retrieve a single page by its slug",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pages"
                ],
                "summary": "Get a page by slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include content blocks",
                        "name": "include_blocks",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Page"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/pages/{id}": {
            "get": {
                "description": "Retrieve a single page by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pages"
                ],
                "summary": "Get a page by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include content blocks",
                        "name": "include_blocks",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Page"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/pages/{id}/blocks": {
            "get": {
                "description": "Retrieve all content blocks for a specific page",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pages"
                ],
                "summary": "Get content blocks for a page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include hidden blocks",
                        "name": "include_hidden",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PageContentBlock"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/translations/ai": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Request AI-powered translation for content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Translation"
                ],
                "summary": "Request AI translation",
                "parameters": [
                    {
                        "description": "AI translation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AITranslationRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.TranslationJobResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/translations/content/{entity_type}/{entity_id}/{language}": {
            "get": {
                "description": "Translate dynamic content (article, category, tag, etc.) to specified language",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Translation"
                ],
                "summary": "Translate dynamic content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity type (article, category, tag, menu)",
                        "name": "entity_type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Entity ID",
                        "name": "entity_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Target language code",
                        "name": "language",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/translations/languages": {
            "get": {
                "description": "Get list of supported languages for the application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Translation"
                ],
                "summary": "Get supported languages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SupportedLanguagesResponse"
                        }
                    }
                }
            }
        },
        "/api/translations/status/{job_id}": {
            "get": {
                "description": "Get status of a translation job",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Translation"
                ],
                "summary": "Get translation job status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Translation job ID",
                        "name": "job_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TranslationJobResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/translations/ui/{language}": {
            "post": {
                "description": "Translate a UI message to specified language",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Translation"
                ],
                "summary": "Translate UI message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target language code (e.g., 'en', 'tr', 'es')",
                        "name": "language",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Message ID to translate",
                        "name": "message_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Template data for message interpolation",
                        "name": "template_data",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UITranslationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/interactions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get paginated list of user's interactions with articles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get user's article interactions",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by interaction type",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/reading-history": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve articles that the authenticated user has previously viewed or bookmarked",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user's reading history",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Number of articles to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Article"
                            }
                        }
                    },
                    "401": {
                        "description": "If authentication fails",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "If an internal error occurs",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{username}/articles": {
            "get": {
                "description": "Get a list of articles published by a specific user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user's articles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedArticlesResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{username}/profile": {
            "get": {
                "description": "Get a user's public profile information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserProfileResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/articles/localized": {
            "get": {
                "description": "Retrieve a paginated list of articles in the user's preferred language with fallback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Translations"
                ],
                "summary": "Get localized articles",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of articles per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Language code (e.g., 'en', 'tr', 'es')",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedLocalizedArticlesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/articles/search/localized": {
            "get": {
                "description": "Search articles in the user's preferred language with fallback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Translations"
                ],
                "summary": "Search localized articles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of articles per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Language code (e.g., 'en', 'tr', 'es')",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedLocalizedArticlesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/articles/{id}/localized": {
            "get": {
                "description": "Retrieve a single article in the user's preferred language with fallback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Translations"
                ],
                "summary": "Get localized article by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Language code (e.g., 'en', 'tr', 'es')",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LocalizedArticle"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/articles/{id}/translations": {
            "get": {
                "description": "Retrieve all available translations for a specific article",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Translations"
                ],
                "summary": "Get all translations for an article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleWithTranslations"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a translation for an existing article",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Translations"
                ],
                "summary": "Create a new article translation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Translation data",
                        "name": "translation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateTranslationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleTranslation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/articles/{id}/translations/{language}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing article translation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Translations"
                ],
                "summary": "Update an article translation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Language code",
                        "name": "language",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Translation data",
                        "name": "translation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateTranslationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ArticleTranslation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an existing article translation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Translations"
                ],
                "summary": "Delete an article translation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Language code",
                        "name": "language",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/search": {
            "get": {
                "description": "Perform semantic search using AI-generated embeddings for better relevance. Rate limited to control costs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Semantic Search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Language filter",
                        "name": "lang",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Region filter",
                        "name": "region",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of results (max 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SemanticSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/search/limits": {
            "get": {
                "description": "Get current search rate limit status for the user/IP",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI"
                ],
                "summary": "Get Search Rate Limit Status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/translations/stats": {
            "get": {
                "description": "Get statistics about article translations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article Translations"
                ],
                "summary": "Get translation statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TranslationStats"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/videos": {
            "get": {
                "description": "Retrieve a paginated list of videos with filtering options",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Get videos feed",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page (max 50)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "created_at",
                        "description": "Sort by: created_at, views, votes",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "desc",
                        "description": "Order: asc, desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upload and create a new video with metadata",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Upload a new video",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Video file to upload",
                        "name": "video",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Video title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Video description",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated tags",
                        "name": "tags",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "Is video public",
                        "name": "is_public",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Video"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "413": {
                        "description": "File too large",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/videos/my-interactions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get paginated list of user's interactions with videos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Video Analytics"
                ],
                "summary": "Get user's video interactions",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by interaction type",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/videos/processing-jobs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all processing jobs for the authenticated user's videos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Video Processing"
                ],
                "summary": "Get user's video processing jobs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status: pending, processing, completed, failed",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedProcessingJobsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/videos/{id}": {
            "get": {
                "description": "Retrieve a single video by ID with full details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Get single video",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Video"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update video title, description, and other metadata (video owner only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Update video metadata",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Video update data",
                        "name": "video",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Video"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Video"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Not video owner",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a video (video owner only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Delete a video",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Video deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Not video owner",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/videos/{id}/analytics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get analytics data for a specific video",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Video Analytics"
                ],
                "summary": "Get video analytics",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/videos/{id}/comments": {
            "get": {
                "description": "Retrieve comments for a specific video",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Get video comments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a comment to a video",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Create a comment on a video",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comment data",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.VideoComment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Video not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/videos/{id}/interact": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Record a user's interaction with a video (view, like, dislike, share, etc.)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Video Analytics"
                ],
                "summary": "Record user interaction with video",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Interaction data",
                        "name": "interaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.VideoInteractionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.VideoView"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/videos/{id}/my-vote-cached": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Check if authenticated user has voted on a video",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Get user vote status (Cache Optimized)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/videos/{id}/process": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Manually trigger video processing (transcoding, thumbnails, AI analysis)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Video Processing"
                ],
                "summary": "Trigger video processing",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Processing options",
                        "name": "options",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.VideoProcessingOptions"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.ProcessingJobResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Video not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/videos/{id}/processing-status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the current processing status of a video",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Video Processing"
                ],
                "summary": "Get video processing status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.VideoProcessingStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Video not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/videos/{id}/stats-cached": {
            "get": {
                "description": "Get video like/dislike counts with cache",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Get video statistics (Cache Optimized)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.VoteResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/videos/{id}/vote": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Like or dislike a video",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Vote on a video",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Vote data (type: like/dislike)",
                        "name": "vote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.VoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/videos/{id}/vote-cached": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Like or dislike a video with real-time cache updates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Vote on a video (Cache Optimized)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Vote data (type: like/dislike)",
                        "name": "vote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.VoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ws/notifications": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Establishes a WebSocket connection for receiving real-time notifications",
                "tags": [
                    "WebSocket"
                ],
                "summary": "WebSocket connection for real-time notifications",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID for connection",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "101": {
                        "description": "Switching Protocols",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ws/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns statistics about connected users and notification system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "Get notification statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.NotificationStatsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ws/test": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Sends a test notification (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "Send test notification",
                "parameters": [
                    {
                        "description": "Test notification",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.TestNotificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/ws/user/{user_id}/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Checks if a specific user is connected to WebSocket",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "Check user connection status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.UserConnectionStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/articles/{article_id}/comments": {
            "get": {
                "description": "Retrieve comments for a specific article with threading support",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Get comments for an article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Comments per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "newest",
                        "description": "Sort by: newest, oldest, likes",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new comment on an article (requires authentication)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Create a new comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "article_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comment data",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Comment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/articles/{id}/bookmark": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add or remove an article from user's bookmarks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Bookmark an article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.BookmarkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/articles/{id}/vote": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Like or dislike an article",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Votes"
                ],
                "summary": "Vote on an article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Vote data",
                        "name": "vote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.VoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.VoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "Retrieve all article categories with unified cache support",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Return hierarchical structure",
                        "name": "hierarchical",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Category"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/categories/{slug}": {
            "get": {
                "description": "Retrieve a single category by its slug with cache support",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get category by slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/comments/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing comment (only by comment author)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Update a comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comment data",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Comment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a comment (only by comment author or admin)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Delete a comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/comments/{id}/vote": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Like or dislike a comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Vote on a comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Vote data",
                        "name": "vote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.VoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.VoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/content/{entity_type}/{entity_id}": {
            "get": {
                "description": "Get content in specified language with fallback to default",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Translation"
                ],
                "summary": "Get localized content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity type (category, tag, menu, notification)",
                        "name": "entity_type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Entity ID",
                        "name": "entity_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "tr",
                        "description": "Language code",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/debug/http2/push-test": {
            "get": {
                "description": "Demonstrates HTTP/2 server push by pushing static resources",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Test HTTP/2 server push",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/debug/http2/status": {
            "get": {
                "description": "Returns detailed information about HTTP/2 server capabilities and current connection",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Get HTTP/2 server status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.HTTP2StatusResponse"
                        }
                    }
                }
            }
        },
        "/debug/json-engine": {
            "get": {
                "description": "Returns information about Sonic JSON integration and performance",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Debug"
                ],
                "summary": "Get JSON engine status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.JSONEngineStatus"
                        }
                    }
                }
            }
        },
        "/debug/json-performance": {
            "get": {
                "description": "Runs real-time JSON performance benchmark comparing operations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Debug"
                ],
                "summary": "Test JSON performance",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1000,
                        "description": "Number of iterations for benchmark",
                        "name": "iterations",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/media": {
            "get": {
                "description": "Retrieve all media files with pagination and filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Get all media files",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by MIME type (image, video, audio, document)",
                        "name": "mime_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by uploader user ID",
                        "name": "uploaded_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/media/upload": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Upload a new media file (authenticated users)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Upload a media file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Media file to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Alternative text for the media",
                        "name": "alt_text",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Caption for the media",
                        "name": "caption",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Media"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "413": {
                        "description": "Request Entity Too Large",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/media/{id}": {
            "get": {
                "description": "Retrieve a single media file by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Get media file by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Media ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Media"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update media file metadata (alt text, caption)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Update media metadata",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Media ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Media metadata",
                        "name": "media",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Media"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Media"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a media file and its record (admin or owner only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Delete a media file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Media ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/menu-items": {
            "get": {
                "description": "Retrieve menu items for a specific menu",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MenuItem"
                ],
                "summary": "Get menu items",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter by menu ID",
                        "name": "menu_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by parent ID (0 for root items)",
                        "name": "parent_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MenuItem"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/menu-items/{id}": {
            "get": {
                "description": "Retrieve a single menu item by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MenuItem"
                ],
                "summary": "Get menu item by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Menu Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MenuItem"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/menus": {
            "get": {
                "description": "Retrieve all menus with their items",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
                "summary": "Get all menus",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by location (header, footer, sidebar)",
                        "name": "location",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "Filter by active status",
                        "name": "active",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Menu"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/menus/{slug}": {
            "get": {
                "description": "Retrieve a single menu by its slug with items",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
                "summary": "Get menu by slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Menu slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Menu"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/security/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get security-related events for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Security"
                ],
                "summary": "Get Security Events",
                "responses": {
                    "200": {
                        "description": "security_events",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/security/login-history": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the login history for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Security"
                ],
                "summary": "Get Login History",
                "responses": {
                    "200": {
                        "description": "login_history",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/security/sessions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all active sessions for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Security"
                ],
                "summary": "Get User Sessions",
                "responses": {
                    "200": {
                        "description": "sessions",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Revoke all active sessions for the authenticated user except the current one",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Security"
                ],
                "summary": "Revoke All Sessions",
                "responses": {
                    "200": {
                        "description": "message and revoked_count",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/security/sessions/{session_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Revoke a specific active session for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Security"
                ],
                "summary": "Revoke User Session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "description": "Retrieve all system settings or filter by group/public status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Get all settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by settings group",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by public settings only",
                        "name": "public",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Setting"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/settings/groups": {
            "get": {
                "description": "Retrieve all available setting groups",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Get setting groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/settings/{key}": {
            "get": {
                "description": "Retrieve a single setting by its key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Get setting by key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Setting key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Setting"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "description": "Retrieve all article tags with optional usage count sorting (Cache Optimized)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Get all tags",
                "parameters": [
                    {
                        "type": "string",
                        "default": "name",
                        "description": "Sort by: name, usage_count",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Limit number of results",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Tag"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tags/{slug}": {
            "get": {
                "description": "Retrieve a single tag by its slug with related articles (Cache Optimized)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Get tag by slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Tag"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/bookmarks": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve all bookmarked articles for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Get user's bookmarks",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{user_id}/follow": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Follow or unfollow another user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social"
                ],
                "summary": "Follow a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID to follow",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.FollowResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{user_id}/followers": {
            "get": {
                "description": "Get list of users following the specified user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social"
                ],
                "summary": "Get user's followers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{user_id}/following": {
            "get": {
                "description": "Get list of users that the specified user is following",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social"
                ],
                "summary": "Get users followed by user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Get current API version, build time, and git commit",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Get API version information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/version.VersionInfo"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.TokenPair": {
            "type": "object",
            "properties": {
                "csrf_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "refresh_token": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "dto.AnalyzeURLRequest": {
            "type": "object",
            "required": [
                "url"
            ],
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.AnalyzeURLResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "embed_type": {
                    "type": "string"
                },
                "is_embeddable": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "preview": {
                    "type": "string"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": true
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.CreateBreakingNewsRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "alert_level": {
                    "description": "low, medium, high, critical",
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateCardGridRequest": {
            "type": "object",
            "required": [
                "cards"
            ],
            "properties": {
                "card_style": {
                    "description": "minimal, shadow, bordered",
                    "type": "string"
                },
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.GridCard"
                    }
                },
                "columns": {
                    "description": "default: 3",
                    "type": "integer"
                },
                "gap_size": {
                    "description": "small, medium, large",
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateChartRequest": {
            "type": "object",
            "required": [
                "chart_data"
            ],
            "properties": {
                "chart_data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "position": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateCommentsRequest": {
            "type": "object",
            "properties": {
                "allow_replies": {
                    "description": "default: true",
                    "type": "boolean"
                },
                "comment_system": {
                    "description": "internal, disqus, facebook",
                    "type": "string"
                },
                "max_depth": {
                    "description": "default: 3",
                    "type": "integer"
                },
                "moderation": {
                    "description": "auto, manual, none",
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "require_login": {
                    "description": "default: true",
                    "type": "boolean"
                },
                "show_count": {
                    "description": "default: true",
                    "type": "boolean"
                },
                "sort_order": {
                    "description": "newest, oldest, popular",
                    "type": "string"
                }
            }
        },
        "dto.CreateCountdownRequest": {
            "type": "object",
            "required": [
                "target_date"
            ],
            "properties": {
                "position": {
                    "type": "integer"
                },
                "target_date": {
                    "description": "RFC3339 format",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.CreateEmbedRequest": {
            "type": "object",
            "required": [
                "url"
            ],
            "properties": {
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.CreateFAQRequest": {
            "type": "object",
            "required": [
                "faq_items"
            ],
            "properties": {
                "faq_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.FAQItem"
                    }
                },
                "position": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateHeroRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "background_type": {
                    "description": "image, video, gradient, color",
                    "type": "string"
                },
                "background_url": {
                    "type": "string"
                },
                "cta_buttons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.HeroButton"
                    }
                },
                "min_height": {
                    "description": "500px",
                    "type": "string"
                },
                "overlay_color": {
                    "description": "rgba(0,0,0,0.5)",
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "subtitle": {
                    "type": "string"
                },
                "text_align": {
                    "description": "center, left, right",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.CreateMapRequest": {
            "type": "object",
            "required": [
                "latitude",
                "longitude"
            ],
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MapMarker"
                    }
                },
                "position": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateNewsTickerRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "description": "breaking, sports, economy, tech",
                    "type": "string"
                },
                "news_source": {
                    "description": "internal, rss, api",
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateNewsletterRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.CreateProductRequest": {
            "type": "object",
            "required": [
                "product_id"
            ],
            "properties": {
                "affiliate_tracking": {
                    "description": "default: false",
                    "type": "boolean"
                },
                "buy_button_text": {
                    "description": "\"Satın Al\"",
                    "type": "string"
                },
                "buy_button_url": {
                    "type": "string"
                },
                "display_type": {
                    "description": "card, list, grid",
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "string"
                },
                "show_price": {
                    "description": "default: true",
                    "type": "boolean"
                },
                "show_rating": {
                    "description": "default: true",
                    "type": "boolean"
                },
                "show_stock": {
                    "description": "default: false",
                    "type": "boolean"
                }
            }
        },
        "dto.CreateQuizRequest": {
            "type": "object",
            "required": [
                "questions",
                "quiz_type",
                "title"
            ],
            "properties": {
                "position": {
                    "type": "integer"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.QuizQuestion"
                    }
                },
                "quiz_type": {
                    "description": "quiz, poll, survey",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.CreateRatingRequest": {
            "type": "object",
            "properties": {
                "allow_reviews": {
                    "description": "default: true",
                    "type": "boolean"
                },
                "max_rating": {
                    "description": "default: 5",
                    "type": "integer"
                },
                "position": {
                    "type": "integer"
                },
                "rating_type": {
                    "description": "stars, thumbs, numeric",
                    "type": "string"
                },
                "require_login": {
                    "description": "default: true",
                    "type": "boolean"
                },
                "show_average": {
                    "description": "default: true",
                    "type": "boolean"
                }
            }
        },
        "dto.CreateSearchRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "description": "[\"kategori\", \"tarih\", \"yazar\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "placeholder": {
                    "description": "\"Arama yapın...\"",
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "results_per_page": {
                    "description": "default: 10",
                    "type": "integer"
                },
                "search_api": {
                    "description": "\"/api/search\"",
                    "type": "string"
                },
                "search_scope": {
                    "description": "site, articles, products",
                    "type": "string"
                },
                "show_filters": {
                    "description": "default: true",
                    "type": "boolean"
                }
            }
        },
        "dto.CreateSocialFeedRequest": {
            "type": "object",
            "required": [
                "feed_query",
                "feed_type",
                "platform"
            ],
            "properties": {
                "auto_refresh": {
                    "description": "default: false",
                    "type": "boolean"
                },
                "feed_query": {
                    "description": "#hashtag, @username, etc.",
                    "type": "string"
                },
                "feed_type": {
                    "description": "hashtag, user, list",
                    "type": "string"
                },
                "platform": {
                    "description": "twitter, instagram, linkedin, facebook",
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "post_count": {
                    "description": "default: 5",
                    "type": "integer"
                },
                "refresh_interval": {
                    "description": "seconds, default: 300",
                    "type": "integer"
                },
                "show_avatars": {
                    "description": "default: true",
                    "type": "boolean"
                },
                "show_timestamps": {
                    "description": "default: true",
                    "type": "boolean"
                }
            }
        },
        "dto.DetectEmbedsRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "dto.DetectEmbedsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EmbedSuggestion"
                    }
                }
            }
        },
        "dto.EmbedSuggestion": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "embed_type": {
                    "type": "string"
                },
                "preview": {
                    "type": "string"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": true
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.GridCard": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.HeroButton": {
            "type": "object",
            "required": [
                "text",
                "url"
            ],
            "properties": {
                "style": {
                    "description": "primary, secondary, outline",
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.ReorderBlocksRequest": {
            "type": "object",
            "required": [
                "block_positions"
            ],
            "properties": {
                "block_positions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                }
            }
        },
        "dto.UpdateArticleBlocksRequest": {
            "type": "object",
            "required": [
                "blocks"
            ],
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ArticleContentBlock"
                    }
                }
            }
        },
        "dto.UpdateContentBlockRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "is_visible": {
                    "type": "boolean"
                },
                "position": {
                    "type": "integer"
                },
                "settings": {
                    "type": "string"
                }
            }
        },
        "dto.UserLoginDTO": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.UserRegistrationDTO": {
            "type": "object",
            "required": [
                "email",
                "password",
                "role",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "dto.UserResponseDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handlers.BookmarkResponse": {
            "type": "object",
            "properties": {
                "is_bookmarked": {
                    "type": "boolean"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "handlers.ConnectionInfo": {
            "type": "object",
            "properties": {
                "cipher_suite": {
                    "type": "string"
                },
                "compression": {
                    "type": "string"
                },
                "keep_alive": {
                    "type": "boolean"
                },
                "local_addr": {
                    "type": "string"
                },
                "remote_addr": {
                    "type": "string"
                },
                "tls_version": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateArticleWithBlocksRequest": {
            "type": "object",
            "required": [
                "content_blocks",
                "title"
            ],
            "properties": {
                "category_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "content_blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ArticleContentBlock"
                    }
                },
                "featured_image": {
                    "type": "string"
                },
                "gallery": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "language": {
                    "type": "string"
                },
                "meta_description": {
                    "type": "string"
                },
                "meta_title": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateCommentRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.CreateTranslationRequest": {
            "type": "object",
            "required": [
                "content",
                "language",
                "title"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "meta_description": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "translation_type": {
                    "description": "\"manual\", \"ai\", \"professional\"",
                    "type": "string"
                }
            }
        },
        "handlers.EnqueueJobRequest": {
            "type": "object",
            "required": [
                "job_type",
                "queue_name"
            ],
            "properties": {
                "job_type": {
                    "type": "string"
                },
                "payload": {
                    "type": "object",
                    "additionalProperties": true
                },
                "priority": {
                    "type": "integer"
                },
                "queue_name": {
                    "type": "string"
                }
            }
        },
        "handlers.FollowResponse": {
            "type": "object",
            "properties": {
                "follower_count": {
                    "type": "integer"
                },
                "is_following": {
                    "type": "boolean"
                }
            }
        },
        "handlers.HTTP2StatusResponse": {
            "type": "object",
            "properties": {
                "connection_info": {
                    "$ref": "#/definitions/handlers.ConnectionInfo"
                },
                "features": {
                    "type": "object",
                    "additionalProperties": true
                },
                "h2c_enabled": {
                    "type": "boolean"
                },
                "http2_enabled": {
                    "type": "boolean"
                },
                "multiplexing_available": {
                    "type": "boolean"
                },
                "performance_stats": {
                    "$ref": "#/definitions/handlers.PerformanceStats"
                },
                "protocol": {
                    "type": "string"
                },
                "server_push_available": {
                    "type": "boolean"
                },
                "tls_enabled": {
                    "type": "boolean"
                }
            }
        },
        "handlers.JSONEngineStatus": {
            "type": "object",
            "properties": {
                "available_engines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "current_engine": {
                    "type": "string"
                },
                "performance": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "handlers.MarkAllNotificationsReadResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "updated_count": {
                    "type": "integer"
                }
            }
        },
        "handlers.NotificationStatsResponse": {
            "type": "object",
            "properties": {
                "connected_users": {
                    "type": "integer"
                },
                "system_status": {
                    "type": "string"
                }
            }
        },
        "handlers.PerformanceStats": {
            "type": "object",
            "properties": {
                "active_connections": {
                    "type": "integer"
                },
                "goroutines": {
                    "type": "integer"
                },
                "memory_usage": {
                    "type": "string"
                }
            }
        },
        "handlers.QueueHealthDetails": {
            "type": "object",
            "properties": {
                "active_workers": {
                    "type": "integer"
                },
                "failed_jobs": {
                    "type": "integer"
                },
                "last_processed": {
                    "type": "integer"
                },
                "pending_jobs": {
                    "type": "integer"
                },
                "processing_jobs": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "worker_count": {
                    "type": "integer"
                }
            }
        },
        "handlers.QueueHealthResponse": {
            "type": "object",
            "properties": {
                "queues": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/handlers.QueueHealthDetails"
                    }
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "handlers.QueueJobsResponse": {
            "type": "object",
            "properties": {
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/queue.JobStatusInfo"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "queue_name": {
                    "type": "string"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "handlers.QueueStatsResponse": {
            "type": "object",
            "properties": {
                "queues": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/queue.QueueStats"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "handlers.RecordInteractionRequest": {
            "type": "object",
            "required": [
                "interaction_type"
            ],
            "properties": {
                "completion_rate": {
                    "description": "For view interactions (0.0-1.0)",
                    "type": "number"
                },
                "duration": {
                    "description": "For view interactions",
                    "type": "integer"
                },
                "interaction_type": {
                    "description": "view, bookmark, upvote, downvote, share, comment",
                    "type": "string"
                },
                "platform": {
                    "description": "web, mobile, app",
                    "type": "string"
                },
                "referrer_url": {
                    "description": "How user found the article",
                    "type": "string"
                }
            }
        },
        "handlers.Setup2FARequest": {
            "type": "object",
            "required": [
                "totp_code"
            ],
            "properties": {
                "totp_code": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "handlers.Setup2FAResponse": {
            "type": "object",
            "properties": {
                "backup_codes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "qr_code_url": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                }
            }
        },
        "handlers.TestNotificationRequest": {
            "type": "object",
            "required": [
                "message",
                "type"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "type": {
                    "description": "\"system_alert\", \"user_notification\"",
                    "type": "string"
                },
                "user_id": {
                    "description": "Required for user_notification type",
                    "type": "integer"
                }
            }
        },
        "handlers.UpdateCommentRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateTranslationRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "meta_description": {
                    "type": "string"
                },
                "status": {
                    "description": "\"draft\", \"published\", \"under_review\"",
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "handlers.UserConnectionStatusResponse": {
            "type": "object",
            "properties": {
                "is_connected": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.Verify2FARequest": {
            "type": "object",
            "properties": {
                "backup_code": {
                    "type": "string",
                    "example": "abcd-efgh-ijkl"
                },
                "totp_code": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "handlers.VideoInteractionRequest": {
            "type": "object",
            "required": [
                "interaction_type"
            ],
            "properties": {
                "duration": {
                    "description": "How long the video was watched (seconds)",
                    "type": "integer"
                },
                "interaction_type": {
                    "description": "view, like, dislike, share, comment",
                    "type": "string"
                },
                "platform": {
                    "description": "web, mobile, app",
                    "type": "string"
                },
                "quality": {
                    "description": "720p, 1080p, 4K, auto",
                    "type": "string"
                },
                "referrer_url": {
                    "description": "How user found the video",
                    "type": "string"
                },
                "watch_percent": {
                    "description": "For view interactions (0.0-1.0)",
                    "type": "number"
                }
            }
        },
        "handlers.VoteRequest": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "handlers.VoteResponse": {
            "type": "object",
            "properties": {
                "dislikes": {
                    "type": "integer"
                },
                "likes": {
                    "type": "integer"
                }
            }
        },
        "models.AITranslationRequest": {
            "type": "object",
            "required": [
                "entity_id",
                "entity_type",
                "target_languages"
            ],
            "properties": {
                "entity_id": {
                    "type": "integer"
                },
                "entity_type": {
                    "type": "string"
                },
                "priority": {
                    "description": "1=low, 2=normal, 3=high",
                    "type": "integer"
                },
                "source_language": {
                    "type": "string"
                },
                "target_languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.AgentTaskResponse": {
            "type": "object",
            "properties": {
                "completed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "error_msg": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "input_data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "output_data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "priority": {
                    "type": "integer"
                },
                "started_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "task_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Article": {
            "type": "object",
            "properties": {
                "allow_comments": {
                    "type": "boolean"
                },
                "author": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "author_id": {
                    "type": "integer"
                },
                "blocks_version": {
                    "description": "For versioning content blocks structure",
                    "type": "integer"
                },
                "bookmarks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Bookmark"
                    }
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Category"
                    }
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Comment"
                    }
                },
                "content": {
                    "description": "Legacy content - will be migrated to blocks",
                    "type": "string"
                },
                "content_blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ArticleContentBlock"
                    }
                },
                "content_type": {
                    "description": "legacy, blocks, hybrid",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "featured_image": {
                    "type": "string"
                },
                "gallery": {
                    "description": "JSON array of image URLs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "has_blocks": {
                    "description": "True if article uses content blocks",
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "is_breaking": {
                    "type": "boolean"
                },
                "is_featured": {
                    "type": "boolean"
                },
                "is_sticky": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string"
                },
                "meta_description": {
                    "type": "string"
                },
                "meta_title": {
                    "type": "string"
                },
                "published_at": {
                    "type": "string"
                },
                "read_time": {
                    "description": "in minutes",
                    "type": "integer"
                },
                "related": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RelatedArticle"
                    }
                },
                "scheduled_at": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "source_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "title": {
                    "type": "string"
                },
                "translations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ArticleTranslation"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "user_interactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserArticleInteraction"
                    }
                },
                "views": {
                    "type": "integer"
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Vote"
                    }
                }
            }
        },
        "models.ArticleContentBlock": {
            "type": "object",
            "properties": {
                "article": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Article"
                        }
                    ]
                },
                "article_id": {
                    "type": "integer"
                },
                "block_type": {
                    "description": "text, image, video, gallery, quote, code, divider, etc.",
                    "type": "string"
                },
                "content": {
                    "description": "Main content for the block",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_visible": {
                    "type": "boolean"
                },
                "position": {
                    "description": "Order within the article",
                    "type": "integer"
                },
                "settings": {
                    "description": "JSON for block-specific settings",
                    "type": "object"
                },
                "translations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ArticleContentBlockTranslation"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ArticleContentBlockTranslation": {
            "type": "object",
            "properties": {
                "block": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.ArticleContentBlock"
                        }
                    ]
                },
                "block_id": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ArticleTranslation": {
            "type": "object",
            "properties": {
                "article": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Article"
                        }
                    ]
                },
                "article_id": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "language": {
                    "description": "ISO 639-1 code (en, tr, es, etc.)",
                    "type": "string"
                },
                "meta_description": {
                    "type": "string"
                },
                "meta_title": {
                    "type": "string"
                },
                "quality": {
                    "description": "Quality score 0-1 for AI translations",
                    "type": "number"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "description": "draft, published, pending_review",
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "translated_by": {
                    "description": "User who created/edited the translation",
                    "type": "integer"
                },
                "translation_type": {
                    "description": "manual, ai_generated, auto_translated",
                    "type": "string"
                },
                "translator": {
                    "$ref": "#/definitions/models.User"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ArticleWithTranslations": {
            "type": "object",
            "properties": {
                "article": {
                    "$ref": "#/definitions/models.Article"
                },
                "published_translations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ArticleTranslation"
                    }
                },
                "stats": {
                    "$ref": "#/definitions/models.TranslationStats"
                },
                "translations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ArticleTranslation"
                    }
                }
            }
        },
        "models.Bookmark": {
            "type": "object",
            "properties": {
                "article": {
                    "$ref": "#/definitions/models.Article"
                },
                "article_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "user": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.BreakingNewsBanner": {
            "type": "object",
            "properties": {
                "article": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Article"
                        }
                    ]
                },
                "article_id": {
                    "type": "integer"
                },
                "background_color": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "priority": {
                    "description": "Higher number = higher priority",
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "style": {
                    "type": "string"
                },
                "text_color": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.BulkTranslationRequest": {
            "type": "object",
            "required": [
                "entity_type",
                "target_languages"
            ],
            "properties": {
                "entity_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "entity_type": {
                    "type": "string"
                },
                "force_retranslate": {
                    "type": "boolean"
                },
                "priority": {
                    "type": "integer"
                },
                "source_language": {
                    "type": "string"
                },
                "target_languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.BulkTranslationResponse": {
            "type": "object",
            "properties": {
                "estimated_time": {
                    "type": "string"
                },
                "failed_jobs": {
                    "type": "integer"
                },
                "job_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "queued_jobs": {
                    "type": "integer"
                },
                "skipped_jobs": {
                    "type": "integer"
                }
            }
        },
        "models.CategorizeContentRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "options": {
                    "description": "available categories to choose from",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.CategorizeContentResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CategorySuggestion"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TagSuggestion"
                    }
                }
            }
        },
        "models.Category": {
            "type": "object",
            "properties": {
                "articles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Article"
                    }
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Category"
                    }
                },
                "color": {
                    "description": "Hex color code",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Category"
                        }
                    ]
                },
                "parent_id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "sort_order": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.CategorySuggestion": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "models.Comment": {
            "type": "object",
            "properties": {
                "article": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Article"
                        }
                    ]
                },
                "article_id": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_edited": {
                    "type": "boolean"
                },
                "parent": {
                    "$ref": "#/definitions/models.Comment"
                },
                "parent_id": {
                    "type": "integer"
                },
                "replies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Comment"
                    }
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "integer"
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Vote"
                    }
                }
            }
        },
        "models.ContentImprovement": {
            "type": "object",
            "properties": {
                "explanation": {
                    "type": "string"
                },
                "impact": {
                    "description": "low, medium, high",
                    "type": "string"
                },
                "original": {
                    "type": "string"
                },
                "suggestion": {
                    "type": "string"
                },
                "type": {
                    "description": "grammar, style, structure, seo",
                    "type": "string"
                }
            }
        },
        "models.CreateAgentTaskRequest": {
            "type": "object",
            "required": [
                "input_data",
                "task_type"
            ],
            "properties": {
                "input_data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "priority": {
                    "type": "integer"
                },
                "task_type": {
                    "type": "string"
                },
                "webhook_url": {
                    "type": "string"
                }
            }
        },
        "models.CreateCommentRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 5
                },
                "parent_id": {
                    "type": "integer"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.FAQItem": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "question": {
                    "type": "string"
                }
            }
        },
        "models.Follow": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "follower": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "follower_id": {
                    "type": "integer"
                },
                "following": {
                    "$ref": "#/definitions/models.User"
                },
                "following_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.GenerateContentRequest": {
            "type": "object",
            "required": [
                "topic"
            ],
            "properties": {
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "AI",
                        "journalism",
                        "technology"
                    ]
                },
                "length": {
                    "description": "short, medium, long",
                    "type": "string",
                    "example": "medium"
                },
                "perspective": {
                    "description": "objective, positive, critical",
                    "type": "string",
                    "example": "objective"
                },
                "style": {
                    "description": "news, blog, formal, casual",
                    "type": "string",
                    "example": "news"
                },
                "topic": {
                    "type": "string",
                    "example": "AI in journalism"
                }
            }
        },
        "models.GenerateContentResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "read_time": {
                    "type": "integer"
                },
                "summary": {
                    "type": "string"
                }
            }
        },
        "models.GenerateHeadlinesRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "example": "News article content"
                },
                "count": {
                    "type": "integer",
                    "maximum": 10,
                    "minimum": 1,
                    "example": 5
                },
                "style": {
                    "description": "news, clickbait, formal, casual",
                    "type": "string",
                    "example": "news"
                }
            }
        },
        "models.GenerateHeadlinesResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "headlines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ImproveContentRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "goals": {
                    "description": "clarity, engagement, seo, readability",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "target_level": {
                    "description": "beginner, intermediate, advanced",
                    "type": "string"
                }
            }
        },
        "models.ImproveContentResponse": {
            "type": "object",
            "properties": {
                "improved_content": {
                    "type": "string"
                },
                "quality_score": {
                    "type": "number"
                },
                "suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ContentImprovement"
                    }
                }
            }
        },
        "models.LiveNewsStream": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "cover_image_url": {
                    "description": "These fields are used in the handler but not in the DB schema",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_highlighted": {
                    "type": "boolean"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "description": "scheduled, live, ended",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updates": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.LiveNewsUpdate"
                    }
                },
                "viewer_count": {
                    "type": "integer"
                }
            }
        },
        "models.LiveNewsUpdate": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "importance": {
                    "type": "string"
                },
                "stream": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.LiveNewsStream"
                        }
                    ]
                },
                "stream_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "update_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.LocalizedArticle": {
            "type": "object",
            "properties": {
                "allow_comments": {
                    "type": "boolean"
                },
                "author": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "author_id": {
                    "type": "integer"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Category"
                    }
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "featured_image": {
                    "type": "string"
                },
                "gallery": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "description": "Base article fields",
                    "type": "integer"
                },
                "is_breaking": {
                    "type": "boolean"
                },
                "is_featured": {
                    "type": "boolean"
                },
                "is_sticky": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string"
                },
                "meta_description": {
                    "type": "string"
                },
                "meta_title": {
                    "type": "string"
                },
                "original_language": {
                    "type": "string"
                },
                "published_at": {
                    "type": "string"
                },
                "read_time": {
                    "type": "integer"
                },
                "scheduled_at": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "source_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "title": {
                    "description": "Localized content fields",
                    "type": "string"
                },
                "translation_exists": {
                    "description": "Additional metadata",
                    "type": "boolean"
                },
                "translation_quality": {
                    "type": "number"
                },
                "translation_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "views": {
                    "type": "integer"
                }
            }
        },
        "models.MapMarker": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "lat": {
                    "type": "number"
                },
                "lng": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Media": {
            "type": "object",
            "properties": {
                "alt_text": {
                    "type": "string"
                },
                "caption": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mime_type": {
                    "type": "string"
                },
                "original_name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "uploaded_by": {
                    "type": "integer"
                },
                "uploader": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.Menu": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "items": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MenuItem"
                    }
                },
                "location": {
                    "description": "header, footer, sidebar",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.MenuItem": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "category_id": {
                    "type": "integer"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MenuItem"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "menu": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Menu"
                        }
                    ]
                },
                "menu_id": {
                    "type": "integer"
                },
                "parent": {
                    "$ref": "#/definitions/models.MenuItem"
                },
                "parent_id": {
                    "type": "integer"
                },
                "sort_order": {
                    "type": "integer"
                },
                "target": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.ModerateContentRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "content_type": {
                    "description": "comment, article, message",
                    "type": "string"
                },
                "strict": {
                    "description": "enable strict moderation",
                    "type": "boolean"
                }
            }
        },
        "models.ModerateContentResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ModerationCategory"
                    }
                },
                "confidence": {
                    "type": "number"
                },
                "is_approved": {
                    "type": "boolean"
                },
                "reason": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                }
            }
        },
        "models.ModerationCategory": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "confidence": {
                    "type": "number"
                },
                "severity": {
                    "type": "string"
                }
            }
        },
        "models.NewsStory": {
            "type": "object",
            "properties": {
                "article": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Article"
                        }
                    ]
                },
                "article_id": {
                    "type": "integer"
                },
                "background_color": {
                    "type": "string"
                },
                "create_user_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "duration": {
                    "description": "Duration in seconds",
                    "type": "integer"
                },
                "external_url": {
                    "type": "string"
                },
                "headline": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "sort_order": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "text_color": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "view_count": {
                    "type": "integer"
                }
            }
        },
        "models.Newsletter": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "creator": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "id": {
                    "type": "integer"
                },
                "scheduled_at": {
                    "type": "string"
                },
                "sent_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Notification": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "data": {
                    "description": "Additional data as JSON",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_read": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "read_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.Page": {
            "type": "object",
            "properties": {
                "author": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "author_id": {
                    "description": "Publishing",
                    "type": "integer"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Page"
                    }
                },
                "content_blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PageContentBlock"
                    }
                },
                "created_at": {
                    "description": "Timestamps",
                    "type": "string"
                },
                "excerpt_text": {
                    "type": "string"
                },
                "featured_image": {
                    "description": "Content Management",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_homepage": {
                    "type": "boolean"
                },
                "is_landing_page": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string"
                },
                "layout": {
                    "type": "string"
                },
                "layout_data": {
                    "type": "object"
                },
                "meta_description": {
                    "type": "string"
                },
                "meta_title": {
                    "type": "string"
                },
                "page_settings": {
                    "type": "object"
                },
                "parent": {
                    "$ref": "#/definitions/models.Page"
                },
                "parent_id": {
                    "description": "Hierarchy Support",
                    "type": "integer"
                },
                "published_at": {
                    "type": "string"
                },
                "scheduled_at": {
                    "type": "string"
                },
                "seo_settings": {
                    "description": "Settings (JSON fields)",
                    "type": "object"
                },
                "slug": {
                    "type": "string"
                },
                "sort_order": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "translations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PageTranslation"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "views": {
                    "description": "Analytics",
                    "type": "integer"
                }
            }
        },
        "models.PageContentBlock": {
            "type": "object",
            "properties": {
                "ai_generated": {
                    "description": "AI \u0026 Analytics",
                    "type": "boolean"
                },
                "block_type": {
                    "type": "string"
                },
                "child_blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PageContentBlock"
                    }
                },
                "container": {
                    "$ref": "#/definitions/models.PageContentBlock"
                },
                "container_id": {
                    "description": "For nested containers",
                    "type": "integer"
                },
                "container_type": {
                    "description": "section, row, column, card",
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "description": "Timestamps",
                    "type": "string"
                },
                "grid_settings": {
                    "type": "object"
                },
                "id": {
                    "type": "integer"
                },
                "is_container": {
                    "description": "Container Properties",
                    "type": "boolean"
                },
                "is_visible": {
                    "type": "boolean"
                },
                "page": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Page"
                        }
                    ]
                },
                "page_id": {
                    "type": "integer"
                },
                "performance_data": {
                    "type": "object"
                },
                "position": {
                    "type": "integer"
                },
                "responsive_data": {
                    "description": "Responsive Design",
                    "type": "object"
                },
                "settings": {
                    "type": "object"
                },
                "styles": {
                    "description": "Custom CSS styles",
                    "type": "object"
                },
                "translations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PageContentBlockTranslation"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.PageContentBlockTranslation": {
            "type": "object",
            "properties": {
                "block": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.PageContentBlock"
                        }
                    ]
                },
                "block_id": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.PageTranslation": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "excerpt_text": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string"
                },
                "meta_description": {
                    "type": "string"
                },
                "meta_title": {
                    "type": "string"
                },
                "page": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Page"
                        }
                    ]
                },
                "page_id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.PaginatedArticlesResponse": {
            "type": "object",
            "properties": {
                "articles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Article"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.PaginatedLocalizedArticlesResponse": {
            "type": "object",
            "properties": {
                "articles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.LocalizedArticle"
                    }
                },
                "language": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.PaginatedNotificationsResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Notification"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.PaginatedProcessingJobsResponse": {
            "type": "object",
            "properties": {
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.VideoProcessingJobResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationInfo"
                }
            }
        },
        "models.PaginatedResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "hasNext": {
                    "type": "boolean"
                },
                "hasPrev": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "totalItems": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "models.PaginationInfo": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "models.ProcessAgentTaskResponse": {
            "type": "object",
            "properties": {
                "error_msg": {
                    "type": "string"
                },
                "processed_at": {
                    "type": "string"
                },
                "progress": {
                    "type": "integer"
                },
                "result": {
                    "type": "object",
                    "additionalProperties": true
                },
                "status": {
                    "type": "string"
                },
                "task_id": {
                    "type": "integer"
                }
            }
        },
        "models.ProcessingJobResponse": {
            "type": "object",
            "properties": {
                "job_id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "video_id": {
                    "type": "integer"
                }
            }
        },
        "models.QuizQuestion": {
            "type": "object",
            "properties": {
                "correct_answer": {
                    "type": "integer"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "points": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                },
                "type": {
                    "description": "single, multiple, text",
                    "type": "string"
                }
            }
        },
        "models.RelatedArticle": {
            "type": "object",
            "properties": {
                "article": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Article"
                        }
                    ]
                },
                "article_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "related": {
                    "$ref": "#/definitions/models.Article"
                },
                "related_id": {
                    "type": "integer"
                },
                "score": {
                    "description": "Relevance score",
                    "type": "integer"
                },
                "type": {
                    "description": "auto, manual",
                    "type": "string"
                }
            }
        },
        "models.SemanticSearchMeta": {
            "type": "object",
            "properties": {
                "index_used": {
                    "type": "string"
                },
                "processing_time": {
                    "type": "string"
                },
                "query_embedding": {
                    "description": "Whether embeddings were generated",
                    "type": "boolean"
                },
                "rate_limit_reason": {
                    "description": "Reason for rate limiting (if any)",
                    "type": "string"
                }
            }
        },
        "models.SemanticSearchResponse": {
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/models.SemanticSearchMeta"
                },
                "method": {
                    "description": "\"vector\" or \"fallback\"",
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SemanticSearchResult"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.SemanticSearchResult": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "published_at": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Setting": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_public": {
                    "type": "boolean"
                },
                "key": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.Subscription": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "category_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "tag": {
                    "$ref": "#/definitions/models.Tag"
                },
                "tag_id": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "type": {
                    "description": "newsletter, notifications, category",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.SummarizeContentRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "language": {
                    "description": "tr, en",
                    "type": "string"
                },
                "length": {
                    "description": "short, medium, long",
                    "type": "string"
                },
                "style": {
                    "description": "bullet, paragraph, highlight",
                    "type": "string"
                }
            }
        },
        "models.SummarizeContentResponse": {
            "type": "object",
            "properties": {
                "key_points": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "reduction": {
                    "description": "percentage reduction",
                    "type": "number"
                },
                "summary": {
                    "type": "string"
                },
                "word_count": {
                    "type": "integer"
                }
            }
        },
        "models.SupportedLanguagesResponse": {
            "type": "object",
            "properties": {
                "ai_translation_enabled": {
                    "type": "boolean"
                },
                "default_language": {
                    "type": "string"
                },
                "supported_languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Tag": {
            "type": "object",
            "properties": {
                "articles": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Article"
                    }
                },
                "color": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "usage_count": {
                    "type": "integer"
                }
            }
        },
        "models.TagSuggestion": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "relevance": {
                    "description": "high, medium, low",
                    "type": "string"
                }
            }
        },
        "models.TranslationJobResponse": {
            "type": "object",
            "properties": {
                "completed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "integer"
                },
                "entity_type": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "job_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "progress": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "target_languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.TranslationProgress": {
            "type": "object",
            "properties": {
                "available_languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "completion_rate": {
                    "type": "number"
                },
                "entity_type": {
                    "type": "string"
                },
                "pending_count": {
                    "type": "integer"
                },
                "total_entities": {
                    "type": "integer"
                },
                "translated_count": {
                    "type": "integer"
                }
            }
        },
        "models.TranslationQueue": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "integer"
                },
                "entity_type": {
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "source_lang": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "target_lang": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.TranslationStats": {
            "type": "object",
            "properties": {
                "article_id": {
                    "type": "integer"
                },
                "available_languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "missing_languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pending_translations": {
                    "type": "integer"
                },
                "published_translations": {
                    "type": "integer"
                },
                "total_translations": {
                    "type": "integer"
                }
            }
        },
        "models.UITranslationResponse": {
            "type": "object",
            "properties": {
                "language": {
                    "type": "string"
                },
                "message_id": {
                    "type": "string"
                },
                "translation": {
                    "type": "string"
                }
            }
        },
        "models.UpdateAgentTaskRequest": {
            "type": "object",
            "properties": {
                "error_msg": {
                    "type": "string"
                },
                "output_data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "progress": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.UpdateUserProfileRequest": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "password": {
                    "description": "New password",
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "article_interactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserArticleInteraction"
                    }
                },
                "articles": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Article"
                    }
                },
                "avatar": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "bookmarks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Bookmark"
                    }
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Comment"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "followers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Follow"
                    }
                },
                "following": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Follow"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "last_login_at": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Subscription"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Vote"
                    }
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "models.UserArticleInteraction": {
            "type": "object",
            "properties": {
                "article": {
                    "$ref": "#/definitions/models.Article"
                },
                "article_id": {
                    "type": "integer"
                },
                "completion_rate": {
                    "description": "Percentage of article read (0.0 - 1.0)",
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "duration": {
                    "description": "Reading duration in seconds (for view interactions)",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "interaction_type": {
                    "description": "view, bookmark, upvote, downvote, share, comment",
                    "type": "string"
                },
                "ip_address": {
                    "description": "IPv4/IPv6 address",
                    "type": "string"
                },
                "platform": {
                    "description": "web, mobile, app",
                    "type": "string"
                },
                "referrer_url": {
                    "description": "How user found the article",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "user_agent": {
                    "description": "Browser/device info",
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.UserProfileResponse": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "follower_count": {
                    "type": "integer"
                },
                "following_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "recent_articles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Article"
                    }
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "models.Video": {
            "type": "object",
            "properties": {
                "ai_confidence": {
                    "type": "number"
                },
                "ai_generated": {
                    "description": "AI and content analysis",
                    "type": "boolean"
                },
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "category_id": {
                    "description": "Content metadata",
                    "type": "integer"
                },
                "comment_count": {
                    "type": "integer"
                },
                "comments": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.VideoComment"
                    }
                },
                "content_warning": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dislike_count": {
                    "type": "integer"
                },
                "duration": {
                    "description": "Duration in seconds",
                    "type": "integer"
                },
                "file_size": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_featured": {
                    "type": "boolean"
                },
                "is_generated": {
                    "description": "AI-generated content",
                    "type": "boolean"
                },
                "is_public": {
                    "type": "boolean"
                },
                "like_count": {
                    "type": "integer"
                },
                "published_at": {
                    "description": "Timestamps",
                    "type": "string"
                },
                "resolution": {
                    "description": "e.g., \"1080x1920\"",
                    "type": "string"
                },
                "share_count": {
                    "type": "integer"
                },
                "status": {
                    "description": "Status and moderation (reusing existing patterns)",
                    "type": "string"
                },
                "tags": {
                    "description": "JSON array of tags",
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "description": "User and ownership",
                    "type": "integer"
                },
                "video_url": {
                    "description": "File information",
                    "type": "string"
                },
                "view_count": {
                    "description": "Engagement metrics",
                    "type": "integer"
                },
                "views": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.VideoView"
                    }
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.VideoVote"
                    }
                }
            }
        },
        "models.VideoComment": {
            "type": "object",
            "properties": {
                "ai_confidence": {
                    "type": "number"
                },
                "ai_moderated": {
                    "description": "AI moderation",
                    "type": "boolean"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "description": "Timestamps",
                    "type": "string"
                },
                "dislike_count": {
                    "type": "integer"
                },
                "edited_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_edited": {
                    "type": "boolean"
                },
                "like_count": {
                    "description": "Engagement",
                    "type": "integer"
                },
                "parent": {
                    "$ref": "#/definitions/models.VideoComment"
                },
                "parent_id": {
                    "description": "Nested comments (reusing existing pattern)",
                    "type": "integer"
                },
                "replies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.VideoComment"
                    }
                },
                "status": {
                    "description": "Moderation (reusing existing patterns)",
                    "type": "string"
                },
                "toxicity_score": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "integer"
                },
                "video": {
                    "$ref": "#/definitions/models.Video"
                },
                "video_id": {
                    "type": "integer"
                },
                "votes": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.VideoCommentVote"
                    }
                }
            }
        },
        "models.VideoCommentVote": {
            "type": "object",
            "properties": {
                "comment": {
                    "$ref": "#/definitions/models.VideoComment"
                },
                "comment_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.VideoProcessingJobResponse": {
            "type": "object",
            "properties": {
                "completed_at": {
                    "description": "Unix timestamp",
                    "type": "integer"
                },
                "created_at": {
                    "description": "Unix timestamp",
                    "type": "integer"
                },
                "error_msg": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "job_type": {
                    "type": "string"
                },
                "last_updated_at": {
                    "description": "Unix timestamp",
                    "type": "integer"
                },
                "progress": {
                    "type": "integer"
                },
                "started_at": {
                    "description": "Unix timestamp",
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "video_id": {
                    "type": "integer"
                },
                "video_title": {
                    "type": "string"
                }
            }
        },
        "models.VideoProcessingOptions": {
            "type": "object",
            "properties": {
                "ai_analysis": {
                    "description": "Enable AI content analysis",
                    "type": "boolean"
                },
                "auto_publish": {
                    "description": "Auto-publish after processing",
                    "type": "boolean"
                },
                "formats": {
                    "description": "Output formats",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generate_thumbs": {
                    "description": "Generate thumbnail images",
                    "type": "boolean"
                },
                "moderation": {
                    "description": "Enable content moderation",
                    "type": "boolean"
                },
                "priority": {
                    "description": "Processing priority",
                    "type": "string",
                    "enum": [
                        "low",
                        "normal",
                        "high",
                        "urgent"
                    ]
                },
                "quality": {
                    "description": "Target quality",
                    "type": "string",
                    "enum": [
                        "720p",
                        "1080p",
                        "1440p",
                        "4k"
                    ]
                },
                "webhooks": {
                    "description": "Callback URLs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.VideoProcessingStatusResponse": {
            "type": "object",
            "properties": {
                "last_processed_at": {
                    "description": "Unix timestamp",
                    "type": "integer"
                },
                "processing_error": {
                    "type": "string"
                },
                "processing_jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.VideoProcessingJobResponse"
                    }
                },
                "processing_progress": {
                    "type": "integer"
                },
                "processing_status": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "video_id": {
                    "type": "integer"
                }
            }
        },
        "models.VideoView": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Timestamps",
                    "type": "string"
                },
                "duration": {
                    "description": "How long the video was watched (seconds)",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "ip_address": {
                    "description": "View metadata",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_agent": {
                    "type": "string"
                },
                "user_id": {
                    "description": "Nullable for anonymous views",
                    "type": "integer"
                },
                "video": {
                    "$ref": "#/definitions/models.Video"
                },
                "video_id": {
                    "type": "integer"
                },
                "watch_percent": {
                    "description": "Percentage of video watched",
                    "type": "number"
                }
            }
        },
        "models.VideoVote": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "integer"
                },
                "video": {
                    "$ref": "#/definitions/models.Video"
                },
                "video_id": {
                    "type": "integer"
                }
            }
        },
        "models.Vote": {
            "type": "object",
            "properties": {
                "article": {
                    "$ref": "#/definitions/models.Article"
                },
                "article_id": {
                    "type": "integer"
                },
                "comment": {
                    "$ref": "#/definitions/models.Comment"
                },
                "comment_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "description": "like, dislike",
                    "type": "string"
                },
                "user": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.VoteRequest": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "description": "like or dislike",
                    "type": "string",
                    "enum": [
                        "like",
                        "dislike"
                    ]
                }
            }
        },
        "models.VoteResponse": {
            "type": "object",
            "properties": {
                "dislikes": {
                    "type": "integer"
                },
                "likes": {
                    "type": "integer"
                }
            }
        },
        "queue.JobStatus": {
            "type": "string",
            "enum": [
                "pending",
                "processing",
                "completed",
                "failed",
                "retrying"
            ],
            "x-enum-varnames": [
                "JobStatusPending",
                "JobStatusProcessing",
                "JobStatusCompleted",
                "JobStatusFailed",
                "JobStatusRetrying"
            ]
        },
        "queue.JobStatusInfo": {
            "type": "object",
            "properties": {
                "attempts": {
                    "type": "integer"
                },
                "completed_at": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "integer"
                },
                "error_msg": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "max_attempts": {
                    "type": "integer"
                },
                "payload": {
                    "type": "object",
                    "additionalProperties": true
                },
                "priority": {
                    "type": "integer"
                },
                "scheduled_at": {
                    "type": "integer"
                },
                "started_at": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "queue.QueueStats": {
            "type": "object",
            "properties": {
                "completed_jobs": {
                    "type": "integer"
                },
                "dead_jobs": {
                    "type": "integer"
                },
                "failed_jobs": {
                    "type": "integer"
                },
                "last_processed": {
                    "type": "string"
                },
                "pending_jobs": {
                    "type": "integer"
                },
                "processing_jobs": {
                    "type": "integer"
                },
                "queue_name": {
                    "type": "string"
                },
                "worker_count": {
                    "type": "integer"
                }
            }
        },
        "services.CreatePageBlockRequest": {
            "type": "object",
            "properties": {
                "block_type": {
                    "type": "string"
                },
                "container_id": {
                    "type": "integer"
                },
                "container_type": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "grid_settings": {
                    "type": "object",
                    "additionalProperties": true
                },
                "is_container": {
                    "type": "boolean"
                },
                "is_visible": {
                    "type": "boolean"
                },
                "page_id": {
                    "type": "integer"
                },
                "position": {
                    "type": "integer"
                },
                "responsive_data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": true
                },
                "styles": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "services.CreatePageRequest": {
            "type": "object",
            "properties": {
                "author_id": {
                    "type": "integer"
                },
                "content_blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.CreatePageBlockRequest"
                    }
                },
                "excerpt_text": {
                    "type": "string"
                },
                "featured_image": {
                    "type": "string"
                },
                "is_homepage": {
                    "type": "boolean"
                },
                "is_landing_page": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string"
                },
                "layout": {
                    "type": "string"
                },
                "layout_data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "meta_description": {
                    "type": "string"
                },
                "meta_title": {
                    "type": "string"
                },
                "page_settings": {
                    "type": "object",
                    "additionalProperties": true
                },
                "parent_id": {
                    "type": "integer"
                },
                "seo_settings": {
                    "type": "object",
                    "additionalProperties": true
                },
                "slug": {
                    "type": "string"
                },
                "sort_order": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "services.DuplicateBlockRequest": {
            "type": "object",
            "properties": {
                "new_position": {
                    "type": "integer"
                },
                "target_container_id": {
                    "type": "integer"
                },
                "target_page_id": {
                    "type": "integer"
                }
            }
        },
        "services.PaginatedPagesResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "pages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Page"
                    }
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "services.UpdatePageBlockRequest": {
            "type": "object",
            "properties": {
                "block_type": {
                    "type": "string"
                },
                "container_type": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "grid_settings": {
                    "type": "object",
                    "additionalProperties": true
                },
                "is_container": {
                    "type": "boolean"
                },
                "is_visible": {
                    "type": "boolean"
                },
                "position": {
                    "type": "integer"
                },
                "responsive_data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": true
                },
                "styles": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "services.UpdatePageRequest": {
            "type": "object",
            "properties": {
                "excerpt_text": {
                    "type": "string"
                },
                "featured_image": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "layout": {
                    "type": "string"
                },
                "layout_data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "meta_description": {
                    "type": "string"
                },
                "meta_title": {
                    "type": "string"
                },
                "page_settings": {
                    "type": "object",
                    "additionalProperties": true
                },
                "parent_id": {
                    "type": "integer"
                },
                "seo_settings": {
                    "type": "object",
                    "additionalProperties": true
                },
                "sort_order": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "version.VersionInfo": {
            "type": "object",
            "properties": {
                "build_time": {
                    "type": "string"
                },
                "git_commit": {
                    "type": "string"
                },
                "go_version": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}