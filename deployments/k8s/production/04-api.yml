# Production News API Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: news-api
  namespace: production
  labels:
    app: news-api
    component: backend
    version: v2
    environment: production
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  selector:
    matchLabels:
      app: news-api
  template:
    metadata:
      labels:
        app: news-api
        component: backend
        version: v2
        environment: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: api
        image: news/api:production
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        env:
        # Application configuration
        - name: APP_ENV
          value: "production"
        - name: GIN_MODE
          value: "release"
        - name: LOG_LEVEL
          value: "info"
        - name: LOG_FORMAT
          value: "json"
        
        # Go runtime optimizations
        - name: GOMAXPROCS
          value: "0"
        - name: GOMEMLIMIT
          value: "6GiB"
        - name: GOGC
          value: "100"
        - name: GODEBUG
          value: "gctrace=0,madvdontneed=1"
        
        # Database configuration
        - name: DB_HOST
          value: "postgres-service"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: "newsdb_prod"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: DB_SSLMODE
          value: "disable"
        - name: DB_MAX_IDLE_CONNS
          value: "25"
        - name: DB_MAX_OPEN_CONNS
          value: "100"
        - name: DB_CONN_MAX_LIFETIME
          value: "1h"
        - name: DB_CONN_MAX_IDLE_TIME
          value: "30m"
        
        # Redis cache configuration
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        - name: REDIS_DB
          value: "0"
        - name: CACHE_ENABLED
          value: "true"
        - name: CACHE_TTL
          value: "300"
        - name: CACHE_PREFIX
          value: "news:prod:"
        
        # HTTP server optimizations
        - name: HTTP_PORT
          value: "8080"
        - name: HTTP_READ_TIMEOUT
          value: "10s"
        - name: HTTP_WRITE_TIMEOUT
          value: "30s"
        - name: HTTP_IDLE_TIMEOUT
          value: "120s"
        - name: HTTP_READ_HEADER_TIMEOUT
          value: "5s"
        - name: HTTP_MAX_HEADER_BYTES
          value: "1048576"
        
        # Rate limiting configuration
        - name: RATE_LIMIT_ENABLED
          value: "true"
        - name: RATE_LIMIT_GLOBAL_RPM
          value: "10000"
        - name: RATE_LIMIT_GLOBAL_BURST
          value: "20000"
        - name: RATE_LIMIT_API_RPS
          value: "100"
        - name: RATE_LIMIT_API_BURST
          value: "200"
        - name: RATE_LIMIT_USER_RPM
          value: "1000"
        - name: RATE_LIMIT_USER_BURST
          value: "2000"
        
        # Authentication configuration
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: news-api-secret
              key: jwt-secret
        - name: JWT_EXPIRY
          value: "24h"
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: news-api-secret
              key: api-key
        
        # Monitoring and metrics
        - name: METRICS_ENABLED
          value: "true"
        - name: METRICS_PORT
          value: "9090"
        - name: METRICS_PATH
          value: "/metrics"
        - name: HEALTH_CHECK_PATH
          value: "/health"
        
        # Worker queue configuration
        - name: QUEUE_ENABLED
          value: "true"
        - name: QUEUE_REDIS_HOST
          value: "redis-service"
        - name: QUEUE_REDIS_PORT
          value: "6379"
        - name: QUEUE_REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        - name: QUEUE_REDIS_DB
          value: "1"
        
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "1000m" 
            memory: "2Gi"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
          successThreshold: 1
        
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - news-api
              topologyKey: kubernetes.io/hostname
      
      tolerations:
      - key: "high-memory"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

---
apiVersion: v1
kind: Service
metadata:
  name: news-api-service
  namespace: production
  labels:
    app: news-api
    component: backend
spec:
  selector:
    app: news-api
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: metrics
  type: ClusterIP

---
# Horizontal Pod Autoscaler for API
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: news-api-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: news-api
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max
